#!/bin/bash

. git-sh-setup

SOURCE_BRANCH="${GIT_REFLOG_ACTION#* }"
CURRENT_BRANCH=$(git branch --show-current)
VERSION_BRANCH_NAME=$(echo ${CURRENT_BRANCH} | sed s,release/,,)

MAJOR=$(echo ${VERSION_BRANCH_NAME} | cut -f 1 -d.)
MINOR=$(echo ${VERSION_BRANCH_NAME} | cut -f 2 -d.)

# git merge-base --is-ancestor returns 0 on success, so we inverse the condition to check if the tag is here
# Check if a major version is in the history
NEXT_MAJOR=$((MAJOR+1))
CMD=$(git merge-base --is-ancestor ${NEXT_MAJOR}.0_init ${SOURCE_BRANCH} &> /dev/null) || false
if [ $? -eq 0 ] ; then 
    echo "Found tag  ${NEXT_MAJOR}.0_init in the git history, aborting wrong backward merge"
    exit 1
fi

# Check if a next minor version is in the history
NEXT_MINOR=$((MINOR+1))
CMD=$(git merge-base --is-ancestor ${MAJOR}.${NEXT_MINOR}_init ${SOURCE_BRANCH} &> /dev/null) || false
if [ $? -eq 0 ] ; then 
    echo "Found tag ${MAJOR}.${NEXT_MINOR}_init in the git history, aborting wrong backward merge"
    exit 1
fi

