#!/bin/bash

if [ "$#" -eq 0 ]; then
    CURRENT_BRANCH=$(git branch --show-current)
    SOURCE_BRANCH="${GIT_REFLOG_ACTION#* }"
else
    CURRENT_BRANCH="${1}"
    SOURCE_BRANCH="${2}"
fi

# Do nothing if we are not on a release branch
if [[ ! "${CURRENT_BRANCH}" =~ "release" ]]
then
    exit 0
fi

VERSION_BRANCH_NAME=$(echo "${CURRENT_BRANCH}"| sed s,single-release/,, | sed s,release/,,)

MAJOR=$(echo "${VERSION_BRANCH_NAME}" | cut -f 1 -d.)
NEXT_MAJOR=$((MAJOR+1))

MINOR=""
NEXT_MINOR=""
if [[ "${VERSION_BRANCH_NAME}" =~ "\." ]] # check if a minor version exists
then
    MINOR=$(echo "${VERSION_BRANCH_NAME}" | cut -f 2 -d.)
    NEXT_MINOR=$((MINOR+1))
fi

# git merge-base --is-ancestor returns 0 on success, so we inverse the condition to check if the tag is here
# it does not matter if the MINOR, or NEXT_MINOR does not exist, it will just skip it, same for the tags
for branch in "master" "main" "release/${MAJOR}"  "release/${NEXT_MAJOR}" "release/${NEXT_MAJOR}.${NEXT_MINOR}" "${NEXT_MAJOR}.0_init" "${MAJOR}.${NEXT_MINOR}_init"
do
    if [[ ! "${CURRENT_BRANCH}" == "${branch}" ]]
    then
        CMD=$(git merge-base --is-ancestor ${branch} ${SOURCE_BRANCH} &> /dev/null) || false
        if [ $? -eq 0 ] ; then
            echo "Found \"${branch}\" in the git history, aborting wrong backward merge"
            exit 1
        fi
    fi
done
